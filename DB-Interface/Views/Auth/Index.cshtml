@model IEnumerable<Entities.UserView>

@{
    ViewData["Title"] = "Список пользователей";
}

<h1>Список пользователей</h1>

@if (ViewContext.HttpContext.User.IsInRole("admin"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lastname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Firstname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Patronymicname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Role)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Username)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Lastname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Firstname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Patronymicname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Role)
            </td>
            <td>
                @if (ViewContext.HttpContext.User.IsInRole("admin"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id = item.User_Id })     
                }
                @if (ViewContext.HttpContext.User.IsInRole("admin"))
                {
                    @Html.ActionLink("Delete", "Delete", new { id = item.User_Id })       
                }
            </td>
        </tr>
}
    </tbody>
</table>
